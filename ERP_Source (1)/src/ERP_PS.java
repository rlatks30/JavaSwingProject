
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tksml
 */
public class ERP_PS extends javax.swing.JFrame {
    static javax.swing.JFrame User;
    static javax.swing.JFrame Salary;
    static javax.swing.JFrame Transaction;
    static javax.swing.JFrame Goods;
    static javax.swing.JFrame Order;
    DBMan DBM = new DBMan();
    String strSQL = "Select * From Goods ";
    int iCntRow = 0;
    ArrayList pay = new ArrayList();
    SimpleDateFormat format = new SimpleDateFormat ( "yyyyMMdd");
		
    Date time1 = new Date();
		
    String time = format.format(time1);
    /**
     * Creates new form ERP
     */
    public ERP_PS() {
        initComponents();
        try{
            DBM.dbOpen();
            setTableGoodsDB(strSQL);
            DBM.dbClose();
        }catch (Exception e){
            System.out.println("SQLException: "+ e.getMessage());
        }
    }
//    public void getDBData(String strQuery){
//        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
//        model.setNumRows(0);
//        model.setNumRows(31);
//        iCntRow = 0;
//        try{
//            DBM.DB_rs = DBM.DB_stmt.executeQuery(strQuery);
//            while(DBM.DB_rs.next()){
//                jTable1.setValueAt(DBM.DB_rs.getString("Goods_code"), iCntRow, 0);
//                jTable1.setValueAt(DBM.DB_rs.getString("Goods_name"), iCntRow, 1);
//                jTable1.setValueAt(DBM.DB_rs.getString("Goods_price"), iCntRow, 2);
//                jTable1.setValueAt(DBM.DB_rs.getString("Goods_stock"), iCntRow, 3);
//                iCntRow++;
//            }
//            DBM.DB_rs.close();
//        }catch (Exception e){
//            System.out.println("SQLException: "+ e.getMessage());
//        }
//    }
   
    public void setTableGoodsDB(String strQuery) {
        DefaultTableModel modelGoods = (DefaultTableModel)tableList.getModel();
        modelGoods.setNumRows(0);
        strSQL = "select goods.goods_code, goods_name, goods_price, goods_stock, purchase_date\n" +
"from goods, asset where goods.goods_code = asset.goods_code";
        try{
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strSQL);
            while(DBM.DB_rs.next()) {
                Vector myVC = new Vector();
                myVC.addElement(DBM.DB_rs.getString("goods_code"));
                myVC.addElement(DBM.DB_rs.getString("goods_name"));
                myVC.addElement(DBM.DB_rs.getString("goods_price"));
                myVC.addElement(DBM.DB_rs.getString("GOODS_STOCK"));
                myVC.addElement(DBM.DB_rs.getString("purchase_date"));
                modelGoods.addRow(myVC);
            }
            DBM.DB_rs.close();
        } catch(Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rbtnSal = new javax.swing.JRadioButton();
        rbtnTrans = new javax.swing.JRadioButton();
        rbtnEmp = new javax.swing.JRadioButton();
        rbtnGoods = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        labelProductCode = new javax.swing.JLabel();
        labelProductName = new javax.swing.JLabel();
        labelProductPrice = new javax.swing.JLabel();
        labelQuantity = new javax.swing.JLabel();
        txtProductCode = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JSpinner();
        txtProductName = new javax.swing.JTextField();
        btnRefreshGoods = new javax.swing.JButton();
        txtProductPrice = new javax.swing.JTextField();
        btnPurchase = new javax.swing.JButton();
        btnSale = new javax.swing.JButton();
        rbtnExpenses = new javax.swing.JRadioButton();
        rbtnPS = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        jLabel9.setText("상품관리 테이블");

        buttonGroup1.add(rbtnSal);
        rbtnSal.setText("급여");
        rbtnSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnSalActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnTrans);
        rbtnTrans.setText("거래");
        rbtnTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnTransActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnEmp);
        rbtnEmp.setText("사원");
        rbtnEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEmpActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnGoods);
        rbtnGoods.setText("상품");
        rbtnGoods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnGoodsActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("발주");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "상품코드", "상품명", "상품단가", "수량", "날짜"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableList);

        labelProductCode.setText("상품코드");

        labelProductName.setText("상품명");

        labelProductPrice.setText("상품단가");

        labelQuantity.setText("수량");

        btnRefreshGoods.setText("새로고침");
        btnRefreshGoods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshGoodsActionPerformed(evt);
            }
        });

        btnPurchase.setText("구매");
        btnPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurchaseActionPerformed(evt);
            }
        });

        btnSale.setText("판매");
        btnSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleActionPerformed(evt);
            }
        });

        rbtnExpenses.setText("지출");
        rbtnExpenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnExpensesActionPerformed(evt);
            }
        });

        rbtnPS.setText("구매/판매");
        rbtnPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnPSActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(353, 353, 353)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(labelProductName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(labelProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(labelQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtProductCode)
                                    .addComponent(txtProductName)
                                    .addComponent(txtProductPrice)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRefreshGoods, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbtnEmp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtnSal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtnTrans)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnGoods)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnExpenses, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnPS, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnSal)
                    .addComponent(rbtnTrans)
                    .addComponent(rbtnEmp)
                    .addComponent(rbtnGoods)
                    .addComponent(jRadioButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtnExpenses)
                        .addComponent(rbtnPS)))
                .addGap(10, 10, 10)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtProductCode)
                    .addComponent(labelProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtProductName)
                    .addComponent(labelProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRefreshGoods, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnSalActionPerformed
        Login1.User.setVisible(false);
        Login1.Salary.setVisible(true);
        Login1.Transaction.setVisible(false);
        Login1.Goods.setVisible(false);
        Login1.Order.setVisible(false);
        Login1.PS.setVisible(false);
        Login1.Expenses.setVisible(false);
    }//GEN-LAST:event_rbtnSalActionPerformed

    private void rbtnTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnTransActionPerformed
        Login1.User.setVisible(false);
        Login1.Salary.setVisible(false);
        Login1.Transaction.setVisible(true);
        Login1.Goods.setVisible(false);
        Login1.Order.setVisible(false);
        Login1.PS.setVisible(false);
        Login1.Expenses.setVisible(false);
    }//GEN-LAST:event_rbtnTransActionPerformed

    private void rbtnEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEmpActionPerformed
        Login1.User.setVisible(true);
        Login1.Salary.setVisible(false);
        Login1.Transaction.setVisible(false);
        Login1.Goods.setVisible(false);
        Login1.Order.setVisible(false);
        Login1.PS.setVisible(false);
        Login1.Expenses.setVisible(false);
    }//GEN-LAST:event_rbtnEmpActionPerformed

    private void rbtnGoodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnGoodsActionPerformed
        Login1.User.setVisible(false);
        Login1.Salary.setVisible(false);
        Login1.Transaction.setVisible(false);
        Login1.Goods.setVisible(true);
        Login1.Order.setVisible(false);
        Login1.PS.setVisible(false);
        Login1.Expenses.setVisible(false);
    }//GEN-LAST:event_rbtnGoodsActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        Login1.User.setVisible(false);
        Login1.Salary.setVisible(false);
        Login1.Transaction.setVisible(false);
        Login1.Goods.setVisible(false);
        Login1.Order.setVisible(true);
        Login1.PS.setVisible(false);
        Login1.Expenses.setVisible(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void btnRefreshGoodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshGoodsActionPerformed
        // TODO add your handling code here:
        try {
            DBM.dbOpen();
            setTableGoodsDB(strSQL);
            DBM.dbClose();
        } catch (Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }
    }//GEN-LAST:event_btnRefreshGoodsActionPerformed

    private void btnPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurchaseActionPerformed
        // TODO add your handling code here:
        int iCntRow = 0;

        iCntRow = tableList.getRowCount();
        for (int idx = 0; idx < tableList.getRowCount(); idx++ ) {
            if (tableList.getValueAt(idx, 0) == null) {
                iCntRow = idx;
                break;
            }
        }

        

        for(int idx = 0; idx < tableList.getRowCount(); idx++) {
            if(tableList.getValueAt(idx, 0) != null)
            tableList.setValueAt(tableList.getValueAt(idx, 0), idx, 0);
            else
            break;
        }
        boolean bInsertGoods = false;
        boolean bInsertAsset = false;
        int dateTime = Integer.parseInt(time);
        try {

            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery("select * from goods");
            while(DBM.DB_rs.next()){
                if(DBM.DB_rs.getString("goods_code").equals(txtProductCode.getText())){
                    bInsertGoods = true;
                    break;
                } else {
                    bInsertGoods = false;
                }
            }
            if(!bInsertGoods) {
                String strGoodsSQL = "Insert Into goods Values (" + txtProductCode.getText() + ", '" + txtProductName.getText() + "', " + txtProductPrice.getText() + ", " + txtQuantity.getValue() + ")";
                DBM.DB_stmt.executeUpdate(strGoodsSQL);
            } else {
                String strGoodsSQL = "update goods set goods_stock = goods_stock+" + txtQuantity.getValue() + " where goods_code = " + txtProductCode.getText();
                DBM.DB_stmt.executeUpdate(strGoodsSQL);
            }
            DBM.dbClose();

            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery("select * from transaction");
            int count = 0;
            int capital = 0;
            while(DBM.DB_rs.next()){
                count = DBM.DB_rs.getInt("transaction_no")+1;
            }
            String strTransactionSQL = "Insert Into transaction Values (" + count + "," + txtProductCode.getText() + ", " + txtQuantity.getValue() + ", " + dateTime + ", 'P')";
            DBM.DB_stmt.executeUpdate(strTransactionSQL);
            DBM.dbClose();

            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery("select * from asset");
            int countAsset = 0;
            int capitalAsset = 0;
            double changePrice = 0;
            while(DBM.DB_rs.next()){
                if(DBM.DB_rs.getString("goods_code") != null) {
                    countAsset = DBM.DB_rs.getInt("purchase_num") + 1;
                    capitalAsset = DBM.DB_rs.getInt("capital");
                    if(DBM.DB_rs.getString("goods_code").equals(txtProductCode.getText())){
                        bInsertAsset = true;
                        break;
                    } else {
                        bInsertAsset = false;
                    }
                }
            }
            capitalAsset -= (int)txtQuantity.getValue() * Integer.parseInt(txtProductPrice.getText());
            changePrice = Integer.parseInt(txtProductPrice.getText()) * 0.1;
            if(!bInsertAsset) {
                String strAssetInsertSQL = "Insert Into asset Values (" + countAsset + ", " + capitalAsset + ", " + dateTime + "," + txtProductCode.getText() + ", " + changePrice + ", " + txtProductPrice.getText() + ")";;
                DBM.DB_stmt.executeUpdate(strAssetInsertSQL);
                String strAssetUpdateSQL = "update Asset set capital=" + capitalAsset;
                DBM.DB_stmt.executeUpdate(strAssetUpdateSQL);
            } else {
                String strAssetUpdateSQL = "update Asset set capital=" + capitalAsset;
                DBM.DB_stmt.executeUpdate(strAssetUpdateSQL);
            }
            DBM.dbClose();

            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery("select * from asset");
            strSQL = "Select * from goods";
            setTableGoodsDB(strSQL);
            DBM.dbClose();
        } catch (Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }

    }//GEN-LAST:event_btnPurchaseActionPerformed

    private void btnSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleActionPerformed
        // TODO add your handling code here:
        int iCntRow = 0;
        iCntRow = tableList.getSelectedRow();
        for (int idx = 0; idx < tableList.getRowCount(); idx++ ) {
            if (tableList.getValueAt(idx, 0) == null) {
                iCntRow = idx;
                break;
            }
        }

        boolean bInsertGoods = false;
        boolean bInsertAsset = false;
        int InsertGoodsQuantity = 0;
        int dateTime = Integer.parseInt(time);
        try {
            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery("select * from transaction");
            int count = 0;
            int capital = 0;
            while(DBM.DB_rs.next()){
                count = DBM.DB_rs.getInt("transaction_no")+1;
            }
            String strTransactionSQL = "Insert Into transaction Values (" + count + "," + txtProductCode.getText() + ", " + txtQuantity.getValue() + ", " + dateTime + ", 'S')";
            DBM.DB_stmt.executeUpdate(strTransactionSQL);
            DBM.dbClose();
            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery("select * from goods");
            while(DBM.DB_rs.next()){
                if(DBM.DB_rs.getString("goods_code").equals(txtProductCode.getText())){
                    InsertGoodsQuantity = DBM.DB_rs.getInt("goods_stock") - (int)txtQuantity.getValue();
                    if(DBM.DB_rs.getInt("goods_stock") >= (int)txtQuantity.getValue()){
                        bInsertGoods = true;
                        break;
                    }
                } else {
                    bInsertGoods = false;
                }
            }
            if(!bInsertGoods) {
                System.out.println("판매 상품의 재고가 부족합니다.");
            } else {
                if(InsertGoodsQuantity == 0) {
                    String strGoodsSQL = "delete from goods where goods_code = " + txtProductCode.getText();
                    DBM.DB_stmt.executeUpdate(strGoodsSQL);
                    String strAssetSQL = "delete from Asset where goods_code = " + txtProductCode.getText();
                    DBM.DB_stmt.executeUpdate(strAssetSQL);
                } else {
                    String strGoodsSQL = "update goods set goods_stock = goods_stock-" + txtQuantity.getValue() + " where goods_code = " + txtProductCode.getText();
                    DBM.DB_stmt.executeUpdate(strGoodsSQL);
                }
                DBM.dbClose();
                DBM.dbOpen();
                DBM.DB_rs = DBM.DB_stmt.executeQuery("select * from asset");
                int capitalAsset = 0;
                while(DBM.DB_rs.next()){
                    capitalAsset = DBM.DB_rs.getInt("capital");
                    if(DBM.DB_rs.getString("goods_code").equals(txtProductCode.getText())){
                        bInsertAsset = true;
                        break;
                    } else {
                        bInsertAsset = false;
                    }
                }
                capitalAsset += (int)txtQuantity.getValue() * Integer.parseInt(txtProductPrice.getText());
                if(!bInsertAsset) {
                    System.out.println("해당 자산이 없습니다.");
                } else {
                    String strAssetSQL = "update Asset set capital=" + capitalAsset;
                    DBM.DB_stmt.executeUpdate(strAssetSQL);
                }
                DBM.dbClose();
            }

            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery("select * from asset");
            strSQL = "Select * from goods";
            setTableGoodsDB(strSQL);
            DBM.dbClose();
        } catch (Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }
    }//GEN-LAST:event_btnSaleActionPerformed

    private void rbtnExpensesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnExpensesActionPerformed
        // TODO add your handling code here:
        Login1.User.setVisible(false);
        Login1.Salary.setVisible(false);
        Login1.Transaction.setVisible(false);
        Login1.Goods.setVisible(false);
        Login1.Order.setVisible(false);
        Login1.PS.setVisible(false);
        Login1.Expenses.setVisible(true);
    }//GEN-LAST:event_rbtnExpensesActionPerformed

    private void rbtnPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnPSActionPerformed
        // TODO add your handling code here:
        Login1.User.setVisible(false);
        Login1.Salary.setVisible(false);
        Login1.Transaction.setVisible(false);
        Login1.Goods.setVisible(false);
        Login1.Order.setVisible(false);
        Login1.PS.setVisible(true);
        Login1.Expenses.setVisible(false);
    }//GEN-LAST:event_rbtnPSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ERP_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ERP_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ERP_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ERP_User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                User = new ERP_User();
                Salary = new ERP_Salary();
                Transaction = new ERP_Transaction();
                Goods = new ERP_Goods();
                User.setVisible(false);
                Salary.setVisible(false);
                Transaction.setVisible(false);
                Goods.setVisible(true);
                Order = new ERP_Order();
                Order.setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPurchase;
    private javax.swing.JButton btnRefreshGoods;
    private javax.swing.JButton btnSale;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelProductCode;
    private javax.swing.JLabel labelProductName;
    private javax.swing.JLabel labelProductPrice;
    private javax.swing.JLabel labelQuantity;
    private javax.swing.JRadioButton rbtnEmp;
    private javax.swing.JRadioButton rbtnExpenses;
    private javax.swing.JRadioButton rbtnGoods;
    private javax.swing.JRadioButton rbtnPS;
    private javax.swing.JRadioButton rbtnSal;
    private javax.swing.JRadioButton rbtnTrans;
    private javax.swing.JTable tableList;
    private javax.swing.JTextField txtProductCode;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtProductPrice;
    private javax.swing.JSpinner txtQuantity;
    // End of variables declaration//GEN-END:variables
}
